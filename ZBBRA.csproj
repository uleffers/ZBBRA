<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <SwaggerOutput>$(SpaRoot)swagger-api\api.json</SwaggerOutput>
        <SwaggerOutputFolder>$(SpaRoot)swagger-api\api</SwaggerOutputFolder>
        <SwaggerStartupAssembly>$(AssemblyName).dll</SwaggerStartupAssembly>
        <SwaggerDoc>v1</SwaggerDoc>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <BuildServerAndNpm Condition="'$(Configuration)' == 'Debug-Server-only'">false</BuildServerAndNpm>
        <BuildServerAndNpm Condition="$(BuildServerAndNpm) == ''">true</BuildServerAndNpm>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <NpmInstallStampFile>$(SpaRoot)node_modules/.install-stamp</NpmInstallStampFile>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <Configurations>Debug;Release;Debug-Server-only</Configurations>
    </PropertyGroup>
    
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <DocumentationFile>bin\$(Configuration)\ZBBRA.xml</DocumentationFile>
        <OutputPath></OutputPath>
    </PropertyGroup>
    
    <ItemGroup>
        <PackageReference Include="AutoMapper" Version="10.1.1" />
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.9" />
        <PackageReference Include="Microsoft.OpenApi" Version="1.2.3" />
        <PackageReference Include="NSwag.AspNetCore" Version="13.9.2" />
        <PackageReference Include="Swashbuckle" Version="5.6.0" />
        <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="5.6.3" />
        <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="5.6.3" />
        <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="5.6.3" />
        <PackageReference Include="Swashbuckle.Core" Version="5.6.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="ClientApp\swagger-api\api.json" />
        <Content Include="ClientApp\swagger-api\package.json" />
        <Content Include="ClientApp\swagger-api\tsconfig.json" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>
    <Target Name="EnsureNodeEnv" Condition="$(BuildServerAndNpm)" BeforeTargets="Build" Inputs="$(SpaRoot)package.json" Outputs="$(NpmInstallStampFile)">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Touch Files="$(NpmInstallStampFile)" AlwaysCreate="true" />
    </Target>
    <Target Name="EnsureSwaggerExists" Condition="$(BuildServerAndNpm)" BeforeTargets="AfterBuild">
        <!-- Ensure Swagger is installed -->
        <Exec Command="dotnet tool restore" />
    </Target>
    <Target Name="SwaggerToFile" Condition="$(BuildServerAndNpm)" AfterTargets="AfterBuild">
        <Delete Files="$(SwaggerOutput)" />
        <Exec Command="swagger tofile --output $(SwaggerOutput) $(OutputPath)$(SwaggerStartupAssembly) $(SwaggerDoc)" />
    </Target>
    <Target Name="SwaggerToJavaScript" Condition="$(BuildServerAndNpm)" BeforeTargets="Build">
        <Exec WorkingDirectory="$(SpaRoot)" Condition="'$(Configuration)' != 'Release'" Command="npm run-script generateAPI" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run-script build" />
    </Target>
    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- NOTE: Publish assumes that application has been built - include it in CI-->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

    <ItemGroup>
      <Compile Remove="Database\**" />
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Remove="Database\**" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="Database\obj\Database.csproj.nuget.dgspec.json" />
      <_ContentIncludedByDefault Remove="Database\obj\project.assets.json" />
      <_ContentIncludedByDefault Remove="Database\obj\project.packagespec.json" />
      <_ContentIncludedByDefault Remove="ClientApp\test\api.json" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="Database\Database.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="ClientApp\src\Common" />
    </ItemGroup>

    <ItemGroup>
      <TypeScriptCompile Include="ClientApp\src\components\budget\BudgetOverviewCard.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\budget\budgetPage.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\budget\BudgetTableInner.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\budget\BudgetTableContainer.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\budget\BugetTableOuter.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\budget\EditableBudgetCell.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\common\EditableCell.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\common\form\FormikalizedNumberInput.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\footer\Footer.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\logoBar\LogoBar.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\navigation\NavigationBar.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\transactions\TransactionPage.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\transactions\TransactionTable.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\transactions\TransactionTableContainer.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\visualizations\CashflowCard.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\visualizations\CashflowCharts.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\visualizations\DashboardContainer.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\visualizations\NetworthChart.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\visualizations\VisualizationPage.tsx" />
      <TypeScriptCompile Include="ClientApp\src\global.d.ts" />
      <TypeScriptCompile Include="ClientApp\src\Hooks\stores.ts" />
      <TypeScriptCompile Include="ClientApp\src\stores\baseStores\BaseStore.ts" />
      <TypeScriptCompile Include="ClientApp\src\stores\BudgetCategoryStore.ts" />
      <TypeScriptCompile Include="ClientApp\src\stores\BudgetStore.ts" />
      <TypeScriptCompile Include="ClientApp\src\stores\DashboardStore.ts" />
      <TypeScriptCompile Include="ClientApp\src\stores\rootStore.ts" />
      <TypeScriptCompile Include="ClientApp\src\stores\TransactionStore.ts" />
      <TypeScriptCompile Include="ClientApp\src\Texts\index.ts" />
      <TypeScriptCompile Include="ClientApp\src\Utils\EmptyGuid.ts" />
      <TypeScriptCompile Include="ClientApp\src\Utils\formatDate.ts" />
      <TypeScriptCompile Include="ClientApp\src\Utils\MonthMapper.ts" />
    </ItemGroup>

    <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
        <TypeScriptTarget>ES5</TypeScriptTarget>
        <TypeScriptJSXEmit>React</TypeScriptJSXEmit>
        <TypeScriptModuleKind>None</TypeScriptModuleKind>
        <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
        <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
        <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
        <TypeScriptOutFile />
        <TypeScriptOutDir />
        <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
        <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
        <TypeScriptSourceMap>True</TypeScriptSourceMap>
        <TypeScriptMapRoot />
        <TypeScriptSourceRoot />
    </PropertyGroup>

</Project>
